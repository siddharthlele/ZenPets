CREATE TABLE countries (
  countryID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  countryName TEXT,
  currencyName TEXT,
  currencyCode TEXT,
  currencySymbol TEXT,
  countryFlag TEXT
);

CREATE TABLE states (
  stateID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  countryID INT NOT NULL,
  stateName TEXT,
  INDEX (countryID),
  FOREIGN KEY(countryID) REFERENCES countries(countryID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE cities (
  cityID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  stateID INT NOT NULL,
  cityName TEXT,
  INDEX (stateID),
  FOREIGN KEY(stateID) REFERENCES states(stateID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE localities (
  localityID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  cityID INT NOT NULL,
  localityName TEXT,
  INDEX (cityID),
  FOREIGN KEY(cityID) REFERENCES cities(cityID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE users (
  userID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userAuthID TEXT,
  userName TEXT,
  userEmail TEXT,
  userDisplayProfile TEXT,
  userPhonePrefix TEXT,
  userPhoneNumber TEXT,
  userGender TEXT,
  countryID INT NOT NULL,
  stateID INT NOT NULL,
  cityID INT NOT NULL,
  userType TEXT,
  INDEX (countryID, stateID, cityID),
  FOREIGN KEY(countryID) REFERENCES countries(countryID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(stateID) REFERENCES states(stateID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(cityID) REFERENCES cities(cityID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE adoptions (
  adoptionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  petTypeID INT NOT NULL,
  breedID INT NOT NULL,
  userID INT NOT NULL,
  cityID INT NOT NULL,
  adoptionName TEXT,
  adoptionDescription TEXT,
  adoptionGender TEXT,
  adoptionVaccination TEXT,
  adoptionDewormed TEXT,
  adoptionNeutered TEXT,
  adoptionTimeStamp TEXT,
  adoptionStatus TEXT,
  INDEX (petTypeID, breedID, userID, cityID),
  FOREIGN KEY(petTypeID) REFERENCES pet_type(petTypeID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(breedID) REFERENCES breeds(breedID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(cityID) REFERENCES cities(cityID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE adoption_images (
  imageID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  adoptionID INT NOT NULL,
  imageURL TEXT,
  INDEX (adoptionID),
  FOREIGN KEY(adoptionID) REFERENCES adoptions(adoptionID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE clinics (
  clinicID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userID INT NOT NULL,
  countryID INT NOT NULL,
  stateID INT NOT NULL,
  cityID INT NOT NULL,
  localityID INT NOT NULL,
  clinicName TEXT,
  clinicAddress TEXT,
  clinicLandmark TEXT,
  clinicPinCode TEXT,
  clinicLatitude TEXT,
  clinicLongitude TEXT,
  clinicSubscription TEXT,
  clinicLogo TEXT,
  clinicPhone1 TEXT,
  clinicPhone2 TEXT,
  INDEX (userID, countryID, stateID, cityID, localityID),
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(countryID) REFERENCES countries(countryID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(stateID) REFERENCES states(stateID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(cityID) REFERENCES cities(cityID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(localityID) REFERENCES localities(localityID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctors (
  doctorID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userID INT NOT NULL,
  countryID INT NOT NULL,
  stateID INT NOT NULL,
  cityID INT NOT NULL,
  doctorPrefix TEXT,
  doctorName TEXT,
  doctorDisplayProfile TEXT,
  doctorPhonePrefix TEXT,
  doctorPhoneNumber TEXT,
  doctorGender TEXT,
  doctorSummary TEXT,
  doctorExperience TEXT,
  doctorCharges TEXT,
  doctorDOB TEXT,
  INDEX (userID, countryID, stateID, cityID),
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(countryID) REFERENCES countries(countryID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(stateID) REFERENCES states(stateID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(cityID) REFERENCES cities(cityID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE subscriptions	(
	subscriptionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	subscriptionText TEXT
);

CREATE TABLE doctor_subscription (
	docSubscriptionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	doctorID INT NOT NULL,
	subscriptionStart TEXT,
	subscriptionEnd TEXT,
	subscriptionStatus TEXT,
	INDEX (doctorID),
	FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_appointments (
  appointmentID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  clinicID INT NOT NULL,
  visitReasonID INT NOT NULL,
  userID INT NOT NULL,
  petID INT NOT NULL,
  appointmentDate TEXT,
  appointmentTime TEXT,
  appointmentStatus TEXT,
  INDEX (doctorID, clinicID, visitReasonID, userID, petID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(clinicID) REFERENCES clinics(clinicID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(visitReasonID) REFERENCES visit_reasons(visitReasonID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(petID) REFERENCES pets(petID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_clinics (
  doctorClinicsID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  clinicID INT NOT NULL,
  INDEX (doctorID, clinicID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(clinicID) REFERENCES clinics(clinicID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_education (
  doctorEducationID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  doctorCollegeName TEXT,
  doctorEducationName TEXT,
  doctorEducationYear TEXT,
  INDEX (doctorID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_specialization (
  doctorSpecializationID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  doctorSpecializationName TEXT,
  INDEX (doctorID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_timings (
  timingsID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  clinicID INT NOT NULL,
  sunMorFrom TEXT,
  sunMorTo TEXT,
  sunAftFrom TEXT,
  sunAftTo TEXT,
  monMorFrom TEXT,
  monMorTo TEXT,
  monAftFrom TEXT,
  monAftTo TEXT,
  tueMorFrom TEXT,
  tueMorTo TEXT,
  tueAftFrom TEXT,
  tueAftTo TEXT,
  wedMorFrom TEXT,
  wedMorTo TEXT,
  wedAftFrom TEXT,
  wedAftTo TEXT,
  thuMorFrom TEXT,
  thuMorTo TEXT,
  thuAftFrom TEXT,
  thuAftTo TEXT,
  friMorFrom TEXT,
  friMorTo TEXT,
  friAftFrom TEXT,
  friAftTo TEXT,
  satMorFrom TEXT,
  satMorTo TEXT,
  satAftFrom TEXT,
  satAftTo TEXT,
  INDEX (doctorID, clinicID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(clinicID) REFERENCES clinics(clinicID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_reviews (
  reviewID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  userID INT NOT NULL,
  visitReasonID INT NOT NULL,
  recommendStatus TEXT,
  appointmentStatus TEXT,
  doctorRating TEXT,
  doctorExperience TEXT,
  reviewHelpFulYes INT DEFAULT NULL,
  reviewHelpFulNo INT DEFAULT NULL,
  reviewTimestamp TEXT,
  INDEX (doctorID, userID, visitReasonID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(visitReasonID) REFERENCES visit_reasons(visitReasonID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE doctor_services (
  doctorServiceID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  doctorID INT NOT NULL,
  doctorServiceName TEXT,
  INDEX (doctorID),
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE pet_type (
  petTypeID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  petTypeName TEXT
);

CREATE TABLE breeds (
  breedID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  petTypeID INT NOT NULL,
  breedName TEXT,
  INDEX (petTypeID),
  FOREIGN KEY(petTypeID) REFERENCES pet_type(petTypeID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE pets (
  petID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userID INT NOT NULL,
  petTypeID INT NOT NULL,
  breedID INT NOT NULL,
  petName TEXT,
  petGender TEXT,
  petDOB TEXT,
  petProfile TEXT,
  INDEX (userID, petTypeID, breedID),
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(petTypeID) REFERENCES pet_type(petTypeID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(breedID) REFERENCES breeds(breedID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE visit_reasons (
  visitReasonID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  visitReason TEXT
);

CREATE TABLE vaccines (
  vaccineID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  vaccineName TEXT,
  vaccineDescription TEXT
);

CREATE TABLE vaccinations (
  vaccinationID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  petID INT NOT NULL,
  vaccineID INT NOT NULL,
  vaccinationDate TEXT,
  vaccinationNotes TEXT,
  vaccinationPicture TEXT,
  INDEX (petID, vaccineID),
  FOREIGN KEY(petID) REFERENCES pets(petID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(vaccineID) REFERENCES vaccines(vaccineID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE consultations (
  consultationID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  userID INT NOT NULL,
  petID INT NOT NULL,
  problemID INT NOT NULL,
  consultationTitle TEXT,
  consultationDescription TEXT,
  consultationPicture TEXT,
  consultationTimestamp TEXT,
  INDEX (userID, petID, problemID),
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(petID) REFERENCES pets(petID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(problemID) REFERENCES problems(problemID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE consultation_replies (
  replyID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  consultationID INT NOT NULL,
  doctorID INT NOT NULL,
  replyText TEXT,
  replyTimestamp TEXT,
  INDEX (consultationID, doctorID),
  FOREIGN KEY(consultationID) REFERENCES consultations(consultationID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(doctorID) REFERENCES doctors(doctorID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE reply_votes (
  voteID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  replyID INT NOT NULL,
  userID INT NOT NULL,
  voteStatus BOOLEAN,
  voteTimestamp TEXT,
  INDEX (replyID, userID),
  FOREIGN KEY(replyID) REFERENCES consultation_replies(replyID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE flags (
  flagID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  flagText TEXT
);

CREATE TABLE reply_flags (
  replyFlagID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  replyID INT NOT NULL,
  userID INT NOT NULL,
  flagID INT NOT NULL,
  INDEX (replyID, userID, flagID),
  FOREIGN KEY(replyID) REFERENCES consultation_replies(replyID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(flagID) REFERENCES flags(flagID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE consultation_impressions (
  impressionID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  consultationID INT NOT NULL,
  userID INT NOT NULL,
  INDEX (consultationID, userID),
  FOREIGN KEY(consultationID) REFERENCES consultations(consultationID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE consultation_bookmarks (
  bookmarkID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  consultationID INT NOT NULL,
  userID INT NOT NULL,
  INDEX (consultationID, userID),
  FOREIGN KEY(consultationID) REFERENCES consultations(consultationID) ON UPDATE CASCADE ON DELETE RESTRICT,
  FOREIGN KEY(userID) REFERENCES users(userID) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE problems (
  problemID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  problemText TEXT
);

INSERT INTO `problems` (`problemText`) VALUES
('Rabies'),
('Kennel Cough'),
('Skin Issues'),
('Ear Infections'),
('Urinary Tract Infections'),
('Vomiting'),
('Diarrhea'),
('Parasites'),
('Dental Disease'),
('Obesity'),
('Arthritis'),
('Toxicity / Poisoning'),
('Allergies'),
('Diabetes');

INSERT INTO `pet_type` (`petTypeID`, `petTypeName`) VALUES
(1, 'Barn Yard'),
(2, 'Bird'),
(3, 'Cat'),
(4, 'Dog'),
(5, 'Horse'),
(6, 'Rabbit'),
(7, 'Reptile'),
(8, 'Small and Furry');

INSERT INTO `vaccines` (`vaccineID`, `vaccineName`, `vaccineDescription`) VALUES
(1, 'Distemper', 'An airborne viral disease of the lungs, intestines and brain'),
(2, 'Hepatitis', 'A viral disease of the liver'),
(3, 'Parainfluenza', 'Infectious bronchitis'),
(4, 'Parvovirus', 'A viral disease of the intestines'),
(5, 'Rabies', 'A viral disease fatal to humans and other animals'),
(6, 'Bordatella', 'A bacterial infection of the upper respiratory system (kennel cough)');

INSERT INTO `visit_reasons` (`visitReasonID`, `visitReason`) VALUES
(1, 'Veterinary Treatment'),
(2, 'Pet Grooming'),
(3, 'Pet Vaccination'),
(4, 'Animal Neurology'),
(5, 'Feline Medicine'),
(6, 'Rodents'),
(7, 'Service for Birds'),
(8, 'Neurosurgery in Dogs and Cats'),
(9, 'Treatment for Birds'),
(10, 'Treatment for Reptiles'),
(11, 'Veterinary Chiropractic'),
(12, 'Veterinary Crematorium'),
(13, 'Veterinary Dental Prophylaxis'),
(14, 'Veterinary Pharmacy'),
(15, 'Veterinary Services'),
(16, 'Veterinary Surgery Soft Tissue');

INSERT INTO `countries` (`countryID`, `countryName`, `currencyName`, `currencyCode`, `currencySymbol`, `countryFlag`) VALUES
(1, 'Afghanistan', 'Afghanis', 'AFN', '؋', 'http://192.168.11.2/ZenPets/flags/Afghanistan.png'),
(2, 'Albania', 'Leke', 'ALL', 'Lek', 'http://192.168.11.2/ZenPets/flags/Albania.png'),
(3, 'Argentina', 'Pesos', 'ARS', '$', 'http://192.168.11.2/ZenPets/flags/Argentina.png'),
(4, 'Aruba', 'Guilders', 'AWG', 'ƒ', 'http://192.168.11.2/ZenPets/flags/Aruba.png'),
(5, 'Australia', 'Dollars', 'AUD', '$', 'http://192.168.11.2/ZenPets/flags/Australia.png'),
(6, 'Austria', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Austria.png'),
(7, 'Azerbaijan', 'New Manats', 'AZN', 'ман', 'http://192.168.11.2/ZenPets/flags/Azerbaijan.png'),
(8, 'Bahamas', 'Dollars', 'BSD', '$', 'http://192.168.11.2/ZenPets/flags/Bahamas.png'),
(9, 'Barbados', 'Dollars', 'BBD', '$', 'http://192.168.11.2/ZenPets/flags/Barbados.png'),
(10, 'Belarus', 'Rubles', 'BYR', 'p.', 'http://192.168.11.2/ZenPets/flags/Belarus.png'),
(11, 'Belgium', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Belgium.png'),
(12, 'Beliz', 'Dollars', 'BZD', 'BZ$', 'http://192.168.11.2/ZenPets/flags/Belize.png'),
(13, 'Bermuda', 'Dollars', 'BMD', '$', 'http://192.168.11.2/ZenPets/flags/Bermuda.png'),
(14, 'Bolivia', 'Bolivianos', 'BOB', '$b', 'http://192.168.11.2/ZenPets/flags/Bolivia.png'),
(15, 'Bosnia and Herzegovina', 'Convertible Marka', 'BAM', 'KM', 'http://192.168.11.2/ZenPets/flags/BosniaAndHerzegovina.png'),
(16, 'Botswana', 'Pula\'s', 'BWP', 'P', 'http://192.168.11.2/ZenPets/flags/Botswana.png'),
(17, 'Brazil', 'Reais', 'BRL', 'R$', 'http://192.168.11.2/ZenPets/flags/Brazil.png'),
(18, 'Brunei Darussalam', 'Dollars', 'BND', '$', 'http://192.168.11.2/ZenPets/flags/Brunei.png'),
(19, 'Bulgaria', 'Leva', 'BGN', 'лв', 'http://192.168.11.2/ZenPets/flags/Bulgaria.png'),
(20, 'Cambodia', 'Riels', 'KHR', '៛', 'http://192.168.11.2/ZenPets/flags/Cambodia.png'),
(21, 'Canada', 'Dollars', 'CAD', '$', 'http://192.168.11.2/ZenPets/flags/Canada.png'),
(22, 'Cayman Islands', 'Dollars', 'KYD', '$', 'http://192.168.11.2/ZenPets/flags/CaymanIslands.png'),
(23, 'Chile', 'Pesos', 'CLP', '$', 'http://192.168.11.2/ZenPets/flags/Chile.png'),
(24, 'China', 'Yuan Renminbi', 'CNY', '¥', 'http://192.168.11.2/ZenPets/flags/China.png'),
(25, 'Colombia', 'Pesos', 'COP', '$', 'http://192.168.11.2/ZenPets/flags/Colombia.png'),
(26, 'Costa Rica', 'Colón', 'CRC', '₡', 'http://192.168.11.2/ZenPets/flags/CostaRica.png'),
(27, 'Croatia', 'Kuna', 'HRK', 'kn', 'http://192.168.11.2/ZenPets/flags/Croatia.png'),
(28, 'Cuba', 'Pesos', 'CUP', '₱', 'http://192.168.11.2/ZenPets/flags/Cuba.png'),
(29, 'Cyprus', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Cyprus.png'),
(30, 'Czech Republic', 'Koruny', 'CZK', 'Kč', 'http://192.168.11.2/ZenPets/flags/CzechRepublic.png'),
(31, 'Denmark', 'Kroner', 'DKK', 'kr', 'http://192.168.11.2/ZenPets/flags/Denmark.png'),
(32, 'Dominican Republic', 'Pesos', 'DOP ', 'RD$', 'http://192.168.11.2/ZenPets/flags/DominicanRepublic.png'),
(33, 'Ecuador', 'Dollars', 'USD', '$', 'http://192.168.11.2/ZenPets/flags/Ecuador.png'),
(34, 'Egypt', 'Pounds', 'EGP', '£', 'http://192.168.11.2/ZenPets/flags/Egypt.png'),
(35, 'El Salvador', 'Colones', 'SVC', '$', 'http://192.168.11.2/ZenPets/flags/ElSalvador.png'),
(36, 'Estonia', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Estonia.png'),
(37, 'Fiji', 'Dollars', 'FJD', '$', 'http://192.168.11.2/ZenPets/flags/Fiji.png'),
(38, 'Finland', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Finland.png'),
(39, 'France', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/France.png'),
(40, 'Germany', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Germany.png'),
(41, 'Ghana', 'Cedis', 'GHC', '¢', 'http://192.168.11.2/ZenPets/flags/Ghana.png'),
(42, 'Gibraltar', 'Pounds', 'GIP', '£', 'http://192.168.11.2/ZenPets/flags/Gibraltar.png'),
(43, 'Greece', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Greece.png'),
(44, 'Guatemala', 'Quetzales', 'GTQ', 'Q', 'http://192.168.11.2/ZenPets/flags/Guatemala.png'),
(45, 'Guernsey', 'Pounds', 'GGP', '£', 'http://192.168.11.2/ZenPets/flags/Guernsey.png'),
(46, 'Guyana', 'Dollars', 'GYD', '$', 'http://192.168.11.2/ZenPets/flags/Guyana.png'),
(47, 'Honduras', 'Lempiras', 'HNL', 'L', 'http://192.168.11.2/ZenPets/flags/Honduras.png'),
(48, 'Hong Kong', 'Dollars', 'HKD', '$', 'http://192.168.11.2/ZenPets/flags/HongKong.png'),
(49, 'Hungary', 'Forint', 'HUF', 'Ft', 'http://192.168.11.2/ZenPets/flags/Hungary.png'),
(50, 'Iceland', 'Kronur', 'ISK', 'kr', 'http://192.168.11.2/ZenPets/flags/Iceland.png'),
(51, 'India', 'Rupees', 'INR', '₹', 'http://192.168.11.2/ZenPets/flags/India.png'),
(52, 'Indonesia', 'Rupiahs', 'IDR', 'Rp', 'http://192.168.11.2/ZenPets/flags/Indonesia.png'),
(53, 'Ireland', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Ireland.png'),
(54, 'Isle of Man', 'Pounds', 'IMP', '£', 'http://192.168.11.2/ZenPets/flags/IsleOfMan.png'),
(55, 'Israel', 'New Shekels', 'ILS', '₪', 'http://192.168.11.2/ZenPets/flags/Israel.png'),
(56, 'Italy', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Italy.png'),
(57, 'Jamaica', 'Dollars', 'JMD', 'J$', 'http://192.168.11.2/ZenPets/flags/Jamaica.png'),
(58, 'Japan', 'Yen', 'JPY', '¥', 'http://192.168.11.2/ZenPets/flags/Japan.png'),
(59, 'Jersey', 'Pounds', 'JEP', '£', 'http://192.168.11.2/ZenPets/flags/Jersey.png'),
(60, 'Kazakhstan', 'Tenge', 'KZT', 'лв', 'http://192.168.11.2/ZenPets/flags/Kazakhstan.png'),
(61, 'Kenya', 'Kenyan Shilling', 'KES', 'KSh', 'http://192.168.11.2/ZenPets/flags/Kenya.png'),
(62, 'Kuwait', 'Kuwaiti Dinar', 'KWD', 'ك', 'http://192.168.11.2/ZenPets/flags/Kuwait.png'),
(63, 'Kyrgyzstan', 'Soms', 'KGS', 'лв', 'http://192.168.11.2/ZenPets/flags/Kyrgyzstan.png'),
(64, 'Laos', 'Kips', 'LAK', '₭', 'http://192.168.11.2/ZenPets/flags/Laos.png'),
(65, 'Latvia', 'Lati', 'LVL', 'Ls', 'http://192.168.11.2/ZenPets/flags/Latvia.png'),
(66, 'Lebanon', 'Pounds', 'LBP', '£', 'http://192.168.11.2/ZenPets/flags/Lebanon.png'),
(67, 'Liberia', 'Dollars', 'LRD', '$', 'http://192.168.11.2/ZenPets/flags/Liberia.png'),
(68, 'Liechtenstein', 'Switzerland Francs', 'CHF', 'CHF', 'http://192.168.11.2/ZenPets/flags/Liechtenshein.png'),
(69, 'Lithuania', 'Litai', 'LTL', 'Lt', 'http://192.168.11.2/ZenPets/flags/Lithuania.png'),
(70, 'Luxembourg', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Luxembourg.png'),
(71, 'Macedonia', 'Denars', 'MKD', 'ден', 'http://192.168.11.2/ZenPets/flags/Macedonia.png'),
(72, 'Malaysia', 'Ringgits', 'MYR', 'RM', 'http://192.168.11.2/ZenPets/flags/Malaysia.png'),
(73, 'Malta', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Malta.png'),
(74, 'Mauritius', 'Rupees', 'MUR', '₨', 'http://192.168.11.2/ZenPets/flags/Mauritius.png'),
(75, 'Mexico', 'Pesos', 'MXN', '$', 'http://192.168.11.2/ZenPets/flags/Mexico.png'),
(76, 'Monaco', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Monaco.png'),
(77, 'Mongolia', 'Tugriks', 'MNT', '₮', 'http://192.168.11.2/ZenPets/flags/Mongolia.png'),
(78, 'Mozambique', 'Meticais', 'MZN', 'MT', 'http://192.168.11.2/ZenPets/flags/Mozambique.png'),
(79, 'Namibia', 'Dollars', 'NAD', '$', 'http://192.168.11.2/ZenPets/flags/Namibia.png'),
(80, 'Nepal', 'Rupees', 'NPR', '₨', 'http://192.168.11.2/ZenPets/flags/Nepal.png'),
(81, 'Netherlands', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Netherlands.png'),
(82, 'Netherlands Antilles', 'Guilders', 'ANG', 'ƒ', 'http://192.168.11.2/ZenPets/flags/NetherlandsAntilles.png'),
(83, 'New Zealand', 'Dollars', 'NZD', '$', 'http://192.168.11.2/ZenPets/flags/NewZealand.png'),
(84, 'Nicaragua', 'Cordobas', 'NIO', 'C$', 'http://192.168.11.2/ZenPets/flags/Nicaragua.png'),
(85, 'Nigeria', 'Nairas', 'NGN', '₦', 'http://192.168.11.2/ZenPets/flags/Nigeria.png'),
(86, 'Northern Ireland', 'Pounds', 'GBP', '£', 'http://192.168.11.2/ZenPets/flags/NorthernIreland.png'),
(87, 'Norway', 'Krone', 'NOK', 'kr', 'http://192.168.11.2/ZenPets/flags/Norway.png'),
(88, 'Oman', 'Rials', 'OMR', '﷼', 'http://192.168.11.2/ZenPets/flags/Oman.png'),
(89, 'Panama', 'Balboa', 'PAB', 'B/.', 'http://192.168.11.2/ZenPets/flags/Panama.png'),
(90, 'Paraguay', 'Guarani', 'PYG', 'Gs', 'http://192.168.11.2/ZenPets/flags/Paraguay.png'),
(91, 'Peru', 'Nuevos Soles', 'PEN', 'S/.', 'http://192.168.11.2/ZenPets/flags/Peru.png'),
(92, 'Philippines', 'Pesos', 'PHP', '₱', 'http://192.168.11.2/ZenPets/flags/Philippines.png'),
(93, 'Poland', 'Zlotych', 'PLN', 'zł', 'http://192.168.11.2/ZenPets/flags/Poland.png'),
(94, 'Portugal', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Portugal.png'),
(95, 'Qatar', 'Rials', 'QAR', '﷼', 'http://192.168.11.2/ZenPets/flags/Qatar.png'),
(96, 'Romania', 'New Lei', 'RON', 'lei', 'http://192.168.11.2/ZenPets/flags/Romania.png'),
(97, 'Russia', 'Rubles', 'RUB', 'руб', 'http://192.168.11.2/ZenPets/flags/RussianFederation.png'),
(98, 'Saudi Arabia', 'Riyals', 'SAR', '﷼', 'http://192.168.11.2/ZenPets/flags/SaudiArabia.png'),
(99, 'Scotland', 'Pounds', 'GBP', '£', 'http://192.168.11.2/ZenPets/flags/Scotland.png'),
(100, 'Serbia', 'Dinars', 'RSD', 'Дин.', 'http://192.168.11.2/ZenPets/flags/Serbia.png'),
(101, 'Seychelles', 'Rupees', 'SCR', '₨', 'http://192.168.11.2/ZenPets/flags/Seychelles.png'),
(102, 'Singapore', 'Dollars', 'SGD', '$', 'http://192.168.11.2/ZenPets/flags/Singapore.png'),
(103, 'Slovenia', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Slovenia.png'),
(104, 'Solomon Islands', 'Dollars', 'SBD', '$', 'http://192.168.11.2/ZenPets/flags/SolomonIslands.png'),
(105, 'Somalia', 'Shillings', 'SOS', 'S', 'http://192.168.11.2/ZenPets/flags/Somalia.png'),
(106, 'South Africa', 'Rand', 'ZAR', 'R', 'http://192.168.11.2/ZenPets/flags/SouthAfrica.png'),
(107, 'South Korea', 'Won', 'KRW', '₩', 'http://192.168.11.2/ZenPets/flags/SouthKorea.png'),
(108, 'Spain', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/Spain.png'),
(109, 'Sri Lanka', 'Rupees', 'LKR', 'රු', 'http://192.168.11.2/ZenPets/flags/SriLanka.png'),
(110, 'Suriname', 'Dollars', 'SRD', '$', 'http://192.168.11.2/ZenPets/flags/Suriname.png'),
(111, 'Sweden', 'Kronor', 'SEK', 'kr', 'http://192.168.11.2/ZenPets/flags/Sweden.png'),
(112, 'Switzerland', 'Francs', 'CHF', 'CHF', 'http://192.168.11.2/ZenPets/flags/Switzerland.png'),
(113, 'Taiwan', 'New Dollars', 'TWD', 'NT$', 'http://192.168.11.2/ZenPets/flags/Taiwan.png'),
(114, 'Thailand', 'Baht', 'THB', '฿', 'http://192.168.11.2/ZenPets/flags/Thailand.png'),
(115, 'Trinidad and Tobago', 'Dollars', 'TTD', 'TT$', 'http://192.168.11.2/ZenPets/flags/TrinidadAndTobago.png'),
(116, 'Turkey', 'Lira', 'TRY', '₺', 'http://192.168.11.2/ZenPets/flags/Turkey.png'),
(117, 'Tuvalu', 'Dollars', 'TVD', '$', 'http://192.168.11.2/ZenPets/flags/Tuvalu.png'),
(118, 'Ukraine', 'Hryvnia', 'UAH', '₴', 'http://192.168.11.2/ZenPets/flags/Ukraine.png'),
(119, 'United Arab Emirates', 'Emirati Dirham', 'AED', 'د.إ', 'http://192.168.11.2/ZenPets/flags/UnitedArabEmirates.png'),
(120, 'United Kingdom', 'Pounds', 'GBP', '£', 'http://192.168.11.2/ZenPets/flags/UnitedKingdom.png'),
(121, 'United States of America', 'Dollars', 'USD', '$', 'http://192.168.11.2/ZenPets/flags/UnitedStatesOfAmerica.png'),
(122, 'Uruguay', 'Pesos', 'UYU', '$U', 'http://192.168.11.2/ZenPets/flags/Uruguay.png'),
(123, 'Uzbekistan', 'Sums', 'UZS', 'лв', 'http://192.168.11.2/ZenPets/flags/Uzbekistan.png'),
(124, 'Vatican City', 'Euro', 'EUR', '€', 'http://192.168.11.2/ZenPets/flags/VaticanCity.png'),
(125, 'Venezuela', 'Bolivares Fuertes', 'VEF', 'Bs', 'http://192.168.11.2/ZenPets/flags/Venezuela.png'),
(126, 'Vietnam', 'Dong', 'VND', '₫', 'http://192.168.11.2/ZenPets/flags/Vietnam.png'),
(127, 'Wales', 'Pounds', 'GBP', '£', 'http://192.168.11.2/ZenPets/flags/Wales.png'),
(128, 'Yemen', 'Rials', 'YER', '﷼', 'http://192.168.11.2/ZenPets/flags/Yemen.png'),
(129, 'Zimbabwe', 'Zimbabwe Dollars', 'ZWD', 'Z$', 'http://192.168.11.2/ZenPets/flags/Zimbabwe.png');

INSERT INTO `states` (`stateID`, `stateName`, `countryID`) VALUES
(1, 'Andhra Pradesh', 51),
(2, 'Arunachal Pradesh', 51),
(3, 'Assam', 51),
(4, 'Bihar', 51),
(5, 'Chandigarh', 51),
(6, 'Chhattisgarh', 51),
(7, 'Delhi', 51),
(8, 'Goa', 51),
(9, 'Gujarat', 51),
(10, 'Haryana', 51),
(11, 'Himachal Pradesh', 51),
(12, 'Jammu And Kashmir', 51),
(13, 'Jharkhand', 51),
(14, 'Karnataka', 51),
(15, 'Kerala', 51),
(16, 'Madhya Pradesh', 51),
(17, 'Maharashtra', 51),
(18, 'Manipur', 51),
(19, 'Meghalaya', 51),
(20, 'Mizoram', 51),
(21, 'Nagaland', 51),
(22, 'Odisha', 51),
(23, 'Pondicherry', 51),
(24, 'Punjab', 51),
(25, 'Rajasthan', 51),
(26, 'Sikkim', 51),
(27, 'Tamil Nadu', 51),
(28, 'Telangana', 51),
(29, 'Tripura', 51),
(30, 'Uttar Pradesh', 51),
(31, 'Uttarakhand', 51),
(32, 'West Bengal', 51);

INSERT INTO `cities` (`cityID`, `cityName`, `stateID`) VALUES
(1, 'Agra', 30),
(2, 'Ahmedabad', 9),
(3, 'Ahmednagar', 17),
(4, 'Ajmer', 25),
(5, 'Akola', 17),
(6, 'Aligarh', 30),
(7, 'Alwar', 25),
(8, 'Ambedkar Nagar', 30),
(9, 'Amravati', 17),
(10, 'Amritsar', 24),
(11, 'Anand', 9),
(12, 'Anantapur', 1),
(13, 'Anantnag', 12),
(14, 'Aurangabad', 17),
(15, 'Avikanagar', 25),
(16, 'Baguiati', 32),
(17, 'Balrampur', 30),
(18, 'Banda', 30),
(19, 'Bangaluru', 14),
(20, 'Baramulla', 12),
(21, 'Baramunda', 22),
(22, 'Bardez', 8),
(23, 'Bareilly', 30),
(24, 'Barnala', 24),
(25, 'Barrackpore', 32),
(26, 'Belgaum', 14),
(27, 'Benaulim', 8),
(28, 'Bharatpur', 25),
(29, 'Bhilwara', 25),
(30, 'Bhind', 16),
(31, 'Bhopal', 16),
(32, 'Bhubaneshwar', 22),
(33, 'Bilaspur', 6),
(34, 'Birbhum', 32),
(35, 'Bulandshahr', 30),
(36, 'Buxar', 4),
(37, 'Caranzalem', 8),
(38, 'Chandigarh', 5),
(39, 'Chandigarh', 24),
(40, 'Chandkheda', 9),
(41, 'Chandrapur', 17),
(42, 'Chennai', 27),
(43, 'Chhindwara', 16),
(44, 'Coimbatore', 27),
(45, 'Colva', 8),
(46, 'Cuttack', 22),
(47, 'Dadri', 30),
(48, 'Darbhanga', 4),
(49, 'Dehradun', 31),
(50, 'Deogarh', 22),
(51, 'Deogarh', 25),
(52, 'Dhanaula', 24),
(53, 'Dhar', 16),
(54, 'Dharampura', 6),
(55, 'Dhule', 17),
(56, 'Dindigul', 27),
(57, 'Dombivali', 17),
(58, 'Durg', 6),
(59, 'Ernakulam', 15),
(60, 'Erode', 27),
(61, 'Faridabad', 10),
(62, 'Gangtok', 26),
(63, 'Ghaziabad', 30),
(64, 'Gobichettipalayam', 27),
(65, 'Gondia', 17),
(66, 'Gorakhpur', 30),
(67, 'Gudalur', 27),
(68, 'Gurdaspur', 24),
(69, 'Gurgaon', 10),
(70, 'Guwahati', 3),
(71, 'Gwalior', 16),
(72, 'Hamidpur', 10),
(73, 'Hamirpur', 11),
(74, 'Hanumangarh', 25),
(75, 'Hazaribagh', 13),
(76, 'Hingoli', 17),
(77, 'Hinoo', 13),
(78, 'Hisar', 10),
(79, 'Hyderabad', 1),
(80, 'Hyderabad', 28),
(81, 'Idukki', 15),
(82, 'Indore', 16),
(83, 'Jabalpur', 16),
(84, 'Jaipur', 25),
(85, 'Jalaun', 30),
(86, 'Jallandhar', 24),
(87, 'Jammu', 12),
(88, 'Jamshedpur', 13),
(89, 'Jind', 10),
(90, 'Jodhpur', 25),
(91, 'Kakapora', 12),
(92, 'Kalpetta', 15),
(93, 'Kalyan', 17),
(94, 'Kamrup', 3),
(95, 'Kangra', 11),
(96, 'Kannur', 15),
(97, 'Kanpur', 30),
(98, 'Kapurthala', 24),
(99, 'Karnal', 10),
(100, 'Karur', 27),
(101, 'Kasargod', 15),
(102, 'Katihar', 4),
(103, 'Khagaria', 4),
(104, 'Kishanganj', 4),
(105, 'Kochi', 15),
(106, 'Kolkata', 32),
(107, 'Kollam', 15),
(108, 'Kottayam', 15),
(109, 'Koylana', 9),
(110, 'Kozhikode', 15),
(111, 'Kurukshetra', 10),
(112, 'Leh Ladakh', 12),
(113, 'Lehragaga', 24),
(114, 'Lonar', 17),
(115, 'Lucknow', 30),
(116, 'Ludhiana', 24),
(117, 'Madhubani', 4),
(118, 'Madurai', 27),
(119, 'Malerkotla', 24),
(120, 'Mangalore', 14),
(121, 'Mansa', 24),
(122, 'Mapusa', 8),
(123, 'Margao', 8),
(124, 'Meenadom', 15),
(125, 'Meerut', 30),
(126, 'Miraj', 17),
(127, 'Modinagar', 30),
(128, 'Mohali', 24),
(129, 'Moradabad', 30),
(130, 'Morena', 16),
(131, 'Motihari', 4),
(132, 'Mumbai', 17),
(133, 'Mundra', 9),
(134, 'Munger', 4),
(135, 'Mysore', 14),
(136, 'Nadia', 32),
(137, 'Nagaon', 3),
(138, 'Nagpur', 17),
(139, 'Naharlagun', 2),
(140, 'Nanded', 17),
(141, 'Nashik', 17),
(142, 'Naugachia', 4),
(143, 'Navi Mumbai', 17),
(144, 'Navrangpura', 9),
(145, 'Nawada', 4),
(146, 'Nellore', 1),
(147, 'Nerul', 8),
(148, 'New Delhi', 7),
(149, 'New Harsud', 16),
(150, 'Newasa', 17),
(151, 'Nohar', 25),
(152, 'Noida', 30),
(153, 'Ooty', 27),
(154, 'Palakkad', 15),
(155, 'Palamau', 13),
(156, 'Palarivattom', 15),
(157, 'Panchkula', 10),
(158, 'Panchkula', 24),
(159, 'Panjim', 8),
(160, 'Panvel', 17),
(161, 'Parassala', 15),
(162, 'Parbhani', 17),
(163, 'Partapur', 30),
(164, 'Pathanamthitta', 15),
(165, 'Pathankot', 24),
(166, 'Patna', 4),
(167, 'Pollachi', 27),
(168, 'Pondicherry', 23),
(169, 'Porvorim', 8),
(170, 'Prakasam', 1),
(171, 'Pudukkottai', 27),
(172, 'Pune', 17),
(173, 'Raebareli', 30),
(174, 'Rajavolu', 1),
(175, 'Rajkot', 9),
(176, 'Rajpura', 24),
(177, 'Ramanathapuram', 27),
(178, 'Ranchi', 13),
(179, 'Ranipool', 26),
(180, 'Rishikesh', 31),
(181, 'Rohtak', 24),
(182, 'Saharanpur', 30),
(183, 'Salem', 27),
(184, 'Sangamner', 17),
(185, 'Sangrur', 24),
(186, 'Secunderabad', 28),
(187, 'Sengottai', 27),
(188, 'Serampore', 32),
(189, 'Shillong', 19),
(190, 'Shimla', 11),
(191, 'Solan', 11),
(192, 'Sonari', 13),
(193, 'Sri Ganganagar', 25),
(194, 'Srinagar', 12),
(195, 'Surat', 9),
(196, 'Taliparamba', 15),
(197, 'Tenkasi', 27),
(198, 'Thane', 17),
(199, 'Theni', 27),
(200, 'Thirunindravur', 27),
(201, 'Thiruvananthapuram', 15),
(202, 'Thrippunithura', 15),
(203, 'Thrissur', 15),
(204, 'Tiruchirappalli', 27),
(205, 'Tirunelveli', 27),
(206, 'Tirupati', 1),
(207, 'Udaipur', 25),
(208, 'Ulhasnagar', 17),
(209, 'Vadodara', 9),
(210, 'Vasco', 8),
(211, 'Vellore', 1),
(212, 'Vijay Nagar', 14),
(213, 'Vijayawada', 1),
(214, 'Visakhapatnam', 1),
(215, 'Wayanad', 15),
(216, 'Yavatmal', 17),
(217, 'Zirakpur', 24);

INSERT INTO `localities` (`localityID`, `localityName`, `cityID`) VALUES
(1, 'Akurdi', 172),
(2, 'Aundh', 172),
(3, 'B.T. Kawade Road', 172),
(4, 'Balewadi', 172),
(5, 'Baner', 172),
(6, 'Bavdhan', 172),
(7, 'Bhosari', 172),
(8, 'Bibvewadi', 172),
(9, 'Budhwar Peth', 172),
(10, 'Bund Garden Road', 172),
(11, 'Camp Area', 172),
(12, 'Chakan', 172),
(13, 'Chandan Nagar', 172),
(14, 'Chinchwad', 172),
(15, 'Dange Chowk', 172),
(16, 'Deccan Gymkhana', 172),
(17, 'Dehu Road', 172),
(18, 'Dhankawadi', 172),
(19, 'Dhanori', 172),
(20, 'Dhole Patil Road', 172),
(21, 'East Street', 172),
(22, 'Erandwane', 172),
(23, 'FC Road', 172),
(24, 'Fatima Nagar', 172),
(25, 'Hadapsar', 172),
(26, 'Hinjawadi', 172),
(27, 'JM Road', 172),
(28, 'Kalyani Nagar', 172),
(29, 'Karve Nagar', 172),
(30, 'Katraj', 172),
(31, 'Khadakwasla', 172),
(32, 'Khadki', 172),
(33, 'Khandala', 172),
(34, 'Kharadi', 172),
(35, 'Kondhwa', 172),
(36, 'Koregaon Park', 172),
(37, 'Kothrud', 172),
(38, 'Lavale', 172),
(39, 'Lavasa', 172),
(40, 'Law College Road', 172),
(41, 'Lohegaon', 172),
(42, 'Lonavala', 172),
(43, 'MG Road', 172),
(44, 'Magarpatta', 172),
(45, 'Model Colony', 172),
(46, 'Mulshi Road', 172),
(47, 'Mundhwa', 172),
(48, 'NIBM Road', 172),
(49, 'Narhe', 172),
(50, 'Nigdi', 172),
(51, 'Old Mumbai-Pune Highway', 172),
(52, 'Parvati', 172),
(53, 'Pashan', 172),
(54, 'Pimple Gurav', 172),
(55, 'Pimple Nilakh', 172),
(56, 'Pimple Saudagar', 172),
(57, 'Pimpri', 172),
(58, 'Pune-Solapur Road', 172),
(59, 'Pune University', 172),
(60, 'Rasta Peth', 172),
(61, 'Ravet', 172),
(62, 'Sadashiv Peth', 172),
(63, 'Salunkhe Vihar Road', 172),
(64, 'Sassoon Road', 172),
(65, 'Satara Road', 172),
(66, 'Senapati Bapat Road', 172),
(67, 'Shaniwar Peth', 172),
(68, 'Shivaji Nagar', 172),
(69, 'Shivapur', 172),
(70, 'Shukrawar Peth', 172),
(71, 'Sinhgad Road', 172),
(72, 'Swargate', 172),
(73, 'Tilak Road', 172),
(74, 'Viman Nagar', 172),
(75, 'Vishrantwadi', 172),
(76, 'Wadgaon Sheri', 172),
(77, 'Wagholi', 172),
(78, 'Wakad', 172),
(79, 'Wanowrie', 172),
(80, 'Warje', 172),
(81, 'Yerawada', 42);

INSERT INTO `breeds` (`breedID`, `petTypeID`, `breedName`) VALUES
(1, 1, 'Alpaca'),
(2, 1, 'Cow'),
(3, 1, 'Goat'),
(4, 1, 'Llama'),
(5, 1, 'Pig (Farm)'),
(6, 1, 'Sheep'),
(7, 1, 'Donkey'),
(8, 2, 'African Grey'),
(9, 2, 'Amazon'),
(10, 2, 'Black'),
(11, 2, 'Brotogeris'),
(12, 2, 'Budgie/Budgerigar'),
(13, 2, 'Button Quail'),
(14, 2, 'Caique'),
(15, 2, 'Canary'),
(16, 2, 'Chicken'),
(17, 2, 'Cockatiel'),
(18, 2, 'Cockatoo'),
(19, 2, 'Conure'),
(20, 2, 'Double-breasted'),
(21, 2, 'Dove'),
(22, 2, 'Duck'),
(23, 2, 'Eclectus'),
(24, 2, 'Emu'),
(25, 2, 'Fancy'),
(26, 2, 'Finch'),
(27, 2, 'Goose'),
(28, 2, 'Grouse'),
(29, 2, 'Guinea Fowl'),
(30, 2, 'Kakariki'),
(31, 2, 'Lory/Lorikeet'),
(32, 2, 'Lovebird'),
(33, 2, 'Macaw'),
(34, 2, 'Mourning'),
(35, 2, 'Mynah'),
(36, 2, 'Ostrich'),
(37, 2, 'Parakeet - Other'),
(38, 2, 'Parrot - Other'),
(39, 2, 'Parrotlet'),
(40, 2, 'Peacock/Pea fowl'),
(41, 2, 'Pheasant'),
(42, 2, 'Pigeon'),
(43, 2, 'Pionus'),
(44, 2, 'Poicephalus/Senegal'),
(45, 2, 'Quail'),
(46, 2, 'Quaker Parakeet'),
(47, 2, 'Rhea'),
(48, 2, 'Ringneck/Psittacula'),
(49, 2, 'Rock'),
(50, 2, 'Rose-breasted'),
(51, 2, 'Rosella'),
(52, 2, 'Softbill - Other'),
(53, 2, 'Swan'),
(54, 2, 'Toucan'),
(55, 2, 'Turkey'),
(56, 3, 'Abyssinian'),
(57, 3, 'American Curl'),
(58, 3, 'American Shorthair'),
(59, 3, 'American Wirehair'),
(60, 3, 'Angora'),
(61, 3, 'Applehead Siamese'),
(62, 3, 'Balinese'),
(63, 3, 'Bengal'),
(64, 3, 'Birman'),
(65, 3, 'Bobtail'),
(66, 3, 'Bombay'),
(67, 3, 'Brazilian Shorthair'),
(68, 3, 'British Shorthair'),
(69, 3, 'Burmese'),
(70, 3, 'Burmilla'),
(71, 3, 'Calico'),
(72, 3, 'Canadian Hairless'),
(73, 3, 'Chanilly/Tiffany'),
(74, 3, 'Chartreux'),
(75, 3, 'Chausie'),
(76, 3, 'Chinchilla Cat'),
(77, 3, 'Colorspoint Shorthair'),
(78, 3, 'Cornish Rex'),
(79, 3, 'Cymric'),
(80, 3, 'Devon Rex'),
(81, 3, 'Dilute Calico'),
(82, 3, 'Dilute Tortoiseshell'),
(83, 3, 'Domestic Long Hair'),
(84, 3, 'Domestic Medium Hair'),
(85, 3, 'Domestic Short Hair'),
(86, 3, 'Egyptian Mau'),
(87, 3, 'European Burmese'),
(88, 3, 'European Shorthair'),
(89, 3, 'Exotic Shorthair'),
(90, 3, 'Extra-Toes Cat (Hemingway Polydactyl)'),
(91, 3, 'German Rex'),
(92, 3, 'Havana'),
(93, 3, 'Himalayan'),
(94, 3, 'Japanese Bobtail'),
(95, 3, 'Javanese'),
(96, 3, 'Korat'),
(97, 3, 'LaPerm'),
(98, 3, 'Maine Coon'),
(99, 3, 'Malayan'),
(100, 3, 'Manx'),
(101, 3, 'Munchkin'),
(102, 3, 'Nebelung'),
(103, 3, 'Norwegian Forest Cat'),
(104, 3, 'Ocicat'),
(105, 3, 'Oriental Long Hair'),
(106, 3, 'Oriental Short Hair'),
(107, 3, 'Oriental Tabby'),
(108, 3, 'Persian'),
(109, 3, 'Pixie-Bob'),
(110, 3, 'Ragamuffin'),
(111, 3, 'Ragdoll'),
(112, 3, 'Rex'),
(113, 3, 'Russian Blue'),
(114, 3, 'Savannah'),
(115, 3, 'Scottish Fold'),
(116, 3, 'SelkirkRex'),
(117, 3, 'Siamese'),
(118, 3, 'Siberian'),
(119, 3, 'Singapura'),
(120, 3, 'Snowshoe'),
(121, 3, 'Somali'),
(122, 3, 'Sphynx (hairless cat)'),
(123, 3, 'Tabby'),
(124, 3, 'Tiffany'),
(125, 3, 'Tiger'),
(126, 3, 'Tonkinese'),
(127, 3, 'Torbie'),
(128, 3, 'Tortoiseshell'),
(129, 3, 'Turkish Angora'),
(130, 3, 'Turkish Van'),
(131, 3, 'Tuxedo'),
(132, 4, 'Affenpinscher'),
(133, 4, 'Afghan Hound'),
(134, 4, 'Airedale Terrier'),
(135, 4, 'Akbash'),
(136, 4, 'Akita'),
(137, 4, 'Alaskan Klee Kai'),
(138, 4, 'Alaskan Malamute'),
(139, 4, 'American Bulldog'),
(140, 4, 'American Eskimo Dog'),
(141, 4, 'American Foxhound'),
(142, 4, 'American Hairless Terrier'),
(143, 4, 'American Pit Bull Terrier'),
(144, 4, 'American Staffordshire Terrier'),
(145, 4, 'American Water Spaniel'),
(146, 4, 'Anatolian Shepherd'),
(147, 4, 'Appenzell Sennenhund'),
(148, 4, 'Australian Cattle Dog'),
(149, 4, 'Australian Kelpie'),
(150, 4, 'Australian Shepherd'),
(151, 4, 'Australian Terrier'),
(152, 4, 'Basenji'),
(153, 4, 'Basset Griffon Vendeen'),
(154, 4, 'Basset Hound'),
(155, 4, 'Beagle'),
(156, 4, 'Bearded Collie'),
(157, 4, 'Beauceron'),
(158, 4, 'Bedlington Terrier'),
(159, 4, 'Belgian Griffon'),
(160, 4, 'Belgian Shepherd Dog Sheepdog'),
(161, 4, 'Belgian Shepherd Laekenois'),
(162, 4, 'Belgian Shepherd Malinois'),
(163, 4, 'Belgian Shepherd Tervuren'),
(164, 4, 'Bernese Mountain Dog'),
(165, 4, 'Bichon Frise'),
(166, 4, 'Biewer'),
(167, 4, 'Black and Tan Coonhound'),
(168, 4, 'Black Labrador Retriever'),
(169, 4, 'Black Mouth Cur'),
(170, 4, 'Black Russian Terrier'),
(171, 4, 'Bloodhound'),
(172, 4, 'Blue Lacy'),
(173, 4, 'Bluetick Coonhound'),
(174, 4, 'Bobtail'),
(175, 4, 'Boerboel Mastiff'),
(176, 4, 'Bolognese'),
(177, 4, 'Bordeaux'),
(178, 4, 'Border Collie'),
(179, 4, 'Border Terrier'),
(180, 4, 'Borzoi'),
(181, 4, 'Boston Terrier'),
(182, 4, 'Bouvier des Flandres'),
(183, 4, 'Boxer'),
(184, 4, 'Boykin Spaniel'),
(185, 4, 'Brazilian Mastiff'),
(186, 4, 'Briard'),
(187, 4, 'Brittany'),
(188, 4, 'Brussels Griffon'),
(189, 4, 'Bull Terrier'),
(190, 4, 'Bulldog'),
(191, 4, 'Bullmastiff'),
(192, 4, 'Cairn Terrier'),
(193, 4, 'Canaan Dog'),
(194, 4, 'Cane Corso Mastiff'),
(195, 4, 'Cardigan Welsh Corgi'),
(196, 4, 'Carolina Dog'),
(197, 4, 'Catahoula Leopard Dog'),
(198, 4, 'Cattle Dog'),
(199, 4, 'Caucasian Sheepdog (Caucasian Ovtcharka)'),
(200, 4, 'Cavalier King Charles Spaniel'),
(201, 4, 'Chesapeake Bay Retriever'),
(202, 4, 'Chihuahua'),
(203, 4, 'Chinese Crested-Hairless'),
(204, 4, 'Chinese Crested-Powder Puff'),
(205, 4, 'Chinese Foo Dog'),
(206, 4, 'Chinese Shar-Pei'),
(207, 4, 'Chinook'),
(208, 4, 'Chocolate Labrador Retriever'),
(209, 4, 'Chow Chow'),
(210, 4, 'Cirneco dellEtna'),
(211, 4, 'Clumber Spaniel'),
(212, 4, 'Cockapoo'),
(213, 4, 'Cocker Spaniel'),
(214, 4, 'Collie'),
(215, 4, 'Coonhound'),
(216, 4, 'Corgi'),
(217, 4, 'Coton de Tulear'),
(218, 4, 'Curly-Coated Retriever'),
(219, 4, 'Dachshund'),
(220, 4, 'Dalmatian'),
(221, 4, 'Dandie Dinmont Terrier'),
(222, 4, 'Danish Broholmer'),
(223, 4, 'Deerhound'),
(224, 4, 'Doberman Pinscher'),
(225, 4, 'Dogo Argentino'),
(226, 4, 'Dogue de Bordeaux'),
(227, 4, 'Dutch Shepherd'),
(228, 4, 'Elkhound'),
(229, 4, 'English Bulldog'),
(230, 4, 'English Cocker Spaniel'),
(231, 4, 'English Coonhound'),
(232, 4, 'English Foxhound'),
(233, 4, 'English Mastiff'),
(234, 4, 'English Pointer'),
(235, 4, 'English Setter'),
(236, 4, 'English Sheepdog'),
(237, 4, 'English Shepherd'),
(238, 4, 'English Springer Spaniel'),
(239, 4, 'English Toy Spaniel'),
(240, 4, 'Entlebucher'),
(241, 4, 'Eskimo Dog'),
(242, 4, 'Eskimo Spitz'),
(243, 4, 'Eurasier'),
(244, 4, 'Feist'),
(245, 4, 'Field Spaniel'),
(246, 4, 'Fila Brasileiro'),
(247, 4, 'Finnish Lapphund'),
(248, 4, 'Finnish Spitz'),
(249, 4, 'Flat-coated Retriever'),
(250, 4, 'Fox Terrier'),
(251, 4, 'Foxhound'),
(252, 4, 'French Brittany'),
(253, 4, 'French Bulldog'),
(254, 4, 'French Mastiff'),
(255, 4, 'Galgo Spanish Greyhound'),
(256, 4, 'German Pinscher'),
(257, 4, 'German Shepherd Dog'),
(258, 4, 'German Shorthaired Pointer'),
(259, 4, 'German Spitz'),
(260, 4, 'German Wirehaired Pointer'),
(261, 4, 'Giant Schnauzer'),
(262, 4, 'Glen of Imaal Terrier'),
(263, 4, 'Golden Retriever'),
(264, 4, 'Gordon Setter'),
(265, 4, 'Great Dane'),
(266, 4, 'Great Pyrenees'),
(267, 4, 'Greater Swiss Mountain Dog'),
(268, 4, 'Greyhound'),
(269, 4, 'Halden Hound (Haldenstrover)'),
(270, 4, 'Harrier'),
(271, 4, 'Havanese'),
(272, 4, 'Hollandse Tulphond'),
(273, 4, 'Hound'),
(274, 4, 'Hovawart'),
(275, 4, 'Husky'),
(276, 4, 'Ibizan Hound'),
(277, 4, 'Illyrian Sheepdog'),
(278, 4, 'Indian Pariah'),
(279, 4, 'Irish Setter'),
(280, 4, 'Irish Terrier'),
(281, 4, 'Irish Water Spaniel'),
(282, 4, 'Irish Wolfhound'),
(283, 4, 'Italian Greyhound'),
(284, 4, 'Italian Mastiff'),
(285, 4, 'Italian Spinone'),
(286, 4, 'Jack Russell Terrier'),
(287, 4, 'Jack Russell Terrier (Parson Russell Terrier)'),
(288, 4, 'Japanese Chin'),
(289, 4, 'Jindo (Korean)'),
(290, 4, 'Kai Dog'),
(291, 4, 'Karelian Bear Dog'),
(292, 4, 'Keeshond'),
(293, 4, 'Kerry Blue Terrier'),
(294, 4, 'Kishu'),
(295, 4, 'Klee Kai'),
(296, 4, 'Komondor'),
(297, 4, 'Kuvasz'),
(298, 4, 'Kyi Leo'),
(299, 4, 'Labrador Retriever'),
(300, 4, 'Lakeland Terrier'),
(301, 4, 'Lancashire Heeler'),
(302, 4, 'Leonberger'),
(303, 4, 'Lhasa Apso'),
(304, 4, 'Löwchen'),
(305, 4, 'Maltese'),
(306, 4, 'Manchester Terrier'),
(307, 4, 'Maremma Sheepdog'),
(308, 4, 'Markiesje'),
(309, 4, 'Mastiff'),
(310, 4, 'McNab'),
(311, 4, 'Mexican Hairless'),
(312, 4, 'Miniature Bull Terrier'),
(313, 4, 'Miniature Pinscher'),
(314, 4, 'Miniature Schnauzer'),
(315, 4, 'Mountain Cur'),
(316, 4, 'Mountain Dog'),
(317, 4, 'Munsterlander'),
(318, 4, 'Neapolitan Mastiff'),
(319, 4, 'New Guinea Singing Dog'),
(320, 4, 'Newfoundland Dog'),
(321, 4, 'Norfolk Terrier'),
(322, 4, 'Norwegian Buhund'),
(323, 4, 'Norwegian Elkhound'),
(324, 4, 'Norwegian Lundehund'),
(325, 4, 'Norwich Terrier'),
(326, 4, 'Nova Scotia Duck-Tolling Retriever'),
(327, 4, 'Old English Sheepdog'),
(328, 4, 'Otterhound'),
(329, 4, 'Papillon'),
(330, 4, 'Parson Russell Terrier'),
(331, 4, 'Patterdale Terrier (Fell Terrier)'),
(332, 4, 'Pekingese'),
(333, 4, 'Pembroke Welsh Corgi'),
(334, 4, 'Peruvian Inca Orchid'),
(335, 4, 'Peruvian Inca Orchid'),
(336, 4, 'Petit Basset Griffon Vendeen'),
(337, 4, 'Pharaoh Hound'),
(338, 4, 'Picardy Shepherd'),
(339, 4, 'Pit Bull Terrier'),
(340, 4, 'Plott Hound'),
(341, 4, 'Podengo Portugueso'),
(342, 4, 'Pointer'),
(343, 4, 'Polish Lowland Sheepdog'),
(344, 4, 'Pomeranian'),
(345, 4, 'Poodle (Miniature)'),
(346, 4, 'Poodle (Standard)'),
(347, 4, 'Poodle (T-Cup)'),
(348, 4, 'Poodle (Toy)'),
(349, 4, 'Poodle (unknown type)'),
(350, 4, 'Portuguese Water Dog'),
(351, 4, 'Presa Canario'),
(352, 4, 'Pug'),
(353, 4, 'Puli'),
(354, 4, 'Pumi'),
(355, 4, 'Queensland Heeler'),
(356, 4, 'Rat Terrier'),
(357, 4, 'Red Heeler'),
(358, 4, 'Redbone Coonhound'),
(359, 4, 'Retriever'),
(360, 4, 'Rhodesian Ridgeback'),
(361, 4, 'Rottweiler'),
(362, 4, 'Russian Wolfhound'),
(363, 4, 'Saarlooswolfhond'),
(364, 4, 'Saint Bernard'),
(365, 4, 'Saluki'),
(366, 4, 'Saluki Greyhound'),
(367, 4, 'Samoyed'),
(368, 4, 'Schiller Hound'),
(369, 4, 'Schipperke'),
(370, 4, 'Schnauzer'),
(371, 4, 'Scottish Deerhound'),
(372, 4, 'Scottish Terrier Scottie'),
(373, 4, 'Sealyham Terrier'),
(374, 4, 'Setter'),
(375, 4, 'Shar Pei'),
(376, 4, 'Sheep Dog'),
(377, 4, 'Shepherd'),
(378, 4, 'Shetland Sheepdog Sheltie'),
(379, 4, 'Shiba Inu'),
(380, 4, 'Shih Tzu'),
(381, 4, 'Siberian Husky'),
(382, 4, 'Silky Terrier'),
(383, 4, 'Skye Terrier'),
(384, 4, 'Sloughi'),
(385, 4, 'Smooth Fox Terrier'),
(386, 4, 'Soft-Coated Wheaten Terrier'),
(387, 4, 'South Russian Ovcharka'),
(388, 4, 'Spaniel'),
(389, 4, 'Spanish Mastiff'),
(390, 4, 'Spinone Italiano'),
(391, 4, 'Spitz'),
(392, 4, 'Springer Spaniel'),
(393, 4, 'Staffordshire Bull Terrier'),
(394, 4, 'Sussex Spaniel'),
(395, 4, 'Swedish Vallhund'),
(396, 4, 'Terrier'),
(397, 4, 'Thai Ridgeback'),
(398, 4, 'Tibetan Mastiff'),
(399, 4, 'Tibetan Spaniel'),
(400, 4, 'Tibetan Terrier'),
(401, 4, 'Tosa Inu'),
(402, 4, 'Toy Fox Terrier'),
(403, 4, 'Toy Terrier'),
(404, 4, 'Treeing Walker Coonhound'),
(405, 4, 'Vizsla'),
(406, 4, 'Weimaraner'),
(407, 4, 'Welsh Corgi'),
(408, 4, 'Welsh Springer Spaniel'),
(409, 4, 'Welsh Terrier'),
(410, 4, 'West Highland White Terrier Westie'),
(411, 4, 'Wheaten Terrier'),
(412, 4, 'Whippet'),
(413, 4, 'White German Shepherd'),
(414, 4, 'Wire-haired Pointing Griffon'),
(415, 4, 'Wirehaired Fox Terrier'),
(416, 4, 'Wolf Dog'),
(417, 4, 'Xoloitzcuintle/Mexican Hairless'),
(418, 4, 'Yellow Labrador Retriever'),
(419, 4, 'Yorkshire Terrier Yorkie'),
(420, 5, 'Akhal-Teke'),
(421, 5, 'American Saddlebred'),
(422, 5, 'Andalusian'),
(423, 5, 'Anglo-Arab'),
(424, 5, 'Appaloosa'),
(425, 5, 'Arabian'),
(426, 5, 'Bashkir Curly'),
(427, 5, 'Belgian'),
(428, 5, 'Cleveland Bay'),
(429, 5, 'Clydesdale'),
(430, 5, 'Curly Horse'),
(431, 5, 'Donkey/Mule'),
(432, 5, 'Draft'),
(433, 5, 'Friesian'),
(434, 5, 'Gaited'),
(435, 5, 'Gelderlander'),
(436, 5, 'Grade'),
(437, 5, 'Gypsy Vanner'),
(438, 5, 'Hanoverian'),
(439, 5, 'Holsteiner'),
(440, 5, 'Horse'),
(441, 5, 'Lipizzano'),
(442, 5, 'Lusitano'),
(443, 5, 'Miniature Horse'),
(444, 5, 'Missouri Foxtrotter'),
(445, 5, 'Morgan'),
(446, 5, 'Mustang'),
(447, 5, 'Norwegian Fjord'),
(448, 5, 'Oldenburg'),
(449, 5, 'Paint/Pinto'),
(450, 5, 'Palomino'),
(451, 5, 'Paso Fino'),
(452, 5, 'Percheron'),
(453, 5, 'Peruvian Paso'),
(454, 5, 'Pony'),
(455, 5, 'Quarterhorse'),
(456, 5, 'Rocky Mountain'),
(457, 5, 'Saddlebred'),
(458, 5, 'Selle Francais'),
(459, 5, 'Shetland Pony'),
(460, 5, 'Shire'),
(461, 5, 'Standardbred'),
(462, 5, 'Suffolk'),
(463, 5, 'Tennessee Walker'),
(464, 5, 'Thoroughbred'),
(465, 5, 'Warmblood'),
(466, 6, 'American'),
(467, 6, 'American Chinchilla'),
(468, 6, 'American Fuzzy Lop'),
(469, 6, 'American Sable'),
(470, 6, 'Angora Rabbit'),
(471, 6, 'Belgian Hare'),
(472, 6, 'Beveren'),
(473, 6, 'Britannia Petite'),
(474, 6, 'Bunny Rabbit'),
(475, 6, 'Californian'),
(476, 6, 'Champagne D\'Argent'),
(477, 6, 'Checkered Giant'),
(478, 6, 'Chinchilla'),
(479, 6, 'Cinnamon'),
(480, 6, 'Creme D\'Argent'),
(481, 6, 'Dutch'),
(482, 6, 'Dwarf'),
(483, 6, 'Dwarf Eared'),
(484, 6, 'Dwarf Hotot'),
(485, 6, 'English Angora'),
(486, 6, 'English Lop'),
(487, 6, 'English Spot'),
(488, 6, 'Flemish Giant'),
(489, 6, 'Florida White'),
(490, 6, 'French-Lop'),
(491, 6, 'Giant Angora'),
(492, 6, 'Giant Chinchilla'),
(493, 6, 'Harlequin'),
(494, 6, 'Havana'),
(495, 6, 'Himalayan'),
(496, 6, 'Holland Lop'),
(497, 6, 'Hotot'),
(498, 6, 'Jersey Wooly'),
(499, 6, 'Lilac'),
(500, 6, 'Lionhead'),
(501, 6, 'Longhaired Rabbit'),
(502, 6, 'Lop Eared'),
(503, 6, 'Mini Lop'),
(504, 6, 'Mini Rex'),
(505, 6, 'Mini Satin'),
(506, 6, 'Netherland Dwarf'),
(507, 6, 'New Zealand'),
(508, 6, 'Palomino'),
(509, 6, 'Polish'),
(510, 6, 'Rex'),
(511, 6, 'Rhinelander'),
(512, 6, 'Satin'),
(513, 6, 'Satin Angora'),
(514, 6, 'Shorthaired Rabbit'),
(515, 6, 'Silver'),
(516, 6, 'Silver Fox'),
(517, 6, 'Silver Marten'),
(518, 6, 'Tan'),
(519, 6, 'Thrianta'),
(520, 7, 'Fish'),
(521, 7, 'Frog'),
(522, 7, 'Gecko'),
(523, 7, 'Hermit Crab'),
(524, 7, 'Iguana'),
(525, 7, 'Lizard'),
(526, 7, 'Snake'),
(527, 7, 'Turtle'),
(528, 7, 'Tortoise'),
(529, 8, 'Chinchilla'),
(530, 8, 'Degu'),
(531, 8, 'Ferret'),
(532, 8, 'Gerbil'),
(533, 8, 'Guinea Pig'),
(534, 8, 'Hamster'),
(535, 8, 'Hedgehog'),
(536, 8, 'Mouse'),
(537, 8, 'Prairie Dog'),
(538, 8, 'Rat'),
(539, 8, 'Skunk'),
(540, 8, 'Sugar Glider'),
(541, 8, 'Tarantula');